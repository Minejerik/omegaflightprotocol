syntax = "proto2";

package offromclient;

import "ofprotobufs/ofcommon.proto";

message Status {
	required ofcommon.Location loc = 1;
    // May not be used, may be removed/replaced
    optional float battery_voltage = 2;
}

message Alert {
	required ofcommon.Location loc = 1;
	
	enum AlertType {
		// Emergency/urgent (no text)
		DISCONNECT = 1;
		BATTERY_LOW = 2;
		LANDING_EMERGENCY = 3;
		CRASHING = 4;
		
		// Important/non urgent (can have text)
		LANDED = 5;
		ACTION_COMPLETED = 6;
		TAKING_OFF = 7;
		
		// Other/miscellaneous alert (must have text)
		OTHER = 15;
	}
	
	required AlertType type = 2;
	optional string msg = 3;
}

message MissionIndexTransfer {
	// Only used to transfer saved mission data, on the client
	// Might be removed in future updates, be warned
	// Triggered by ofcommon.Command w/ CommandType set as MISSION_INDEX_DATA
	repeated ofcommon.MissionIndex indexes = 1;
}

message ReachedWaypoint {
	// This was created due to the issue of needing to send data, not just a generic alert.
	// This data can be used for UI updates, server side.
	required ofcommon.WaypointIndex index = 1;
	required ofcommon.MissionIndex mission = 2; 
}

message DiscoveryReply {
	// This is a return to an `oftoclient.Discovery` message
	// Similar to said message as well
	required string protocol_version = 1; // Should be x.x.x

	// Contains the name of the client software, used for logging on server side
	// Similar to a useragent
	// Should be max ~200 characters long
	optional string server_name = 2; 
}